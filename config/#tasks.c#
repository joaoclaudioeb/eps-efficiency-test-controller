
#include <FreeRTOS.h>
#include <task.h>

#include <config/config.h>

#include "tasks.h"
#include "startup.h"
#include "heartbeat.h"
#include "watchdog_reset.h"
#include "system_reset.h"
#include "read_sensors.h"
#include "param_server.h"
#include "mppt_algorithm.h"
#include "heater_controller.h"
#include "time_control.h"
#include "device_response.h"

void create_tasks(void)
{
    /* Startup task */
#if CONFIG_TASK_STARTUP_ENABLED == 1
    xTaskCreate(vTaskStartup, TASK_STARTUP_NAME, TASK_STARTUP_STACK_SIZE, NULL, TASK_STARTUP_PRIORITY, &xTaskStartupHandle);

    if (xTaskStartupHandle == NULL)
    {
        /* Error creating the startup task */
    }
#endif /* CONFIG_TASK_STARTUP_ENABLED */

    /* Watchdog reset task */
#if CONFIG_TASK_WATCHDOG_RESET_ENABLED == 1
    xTaskCreate(vTaskWatchdogReset, TASK_WATCHDOG_RESET_NAME, TASK_WATCHDOG_RESET_STACK_SIZE, NULL, TASK_WATCHDOG_RESET_PRIORITY, &xTaskWatchdogResetHandle);

    if (xTaskWatchdogResetHandle == NULL)
    {
        /* Error creating the watchdog reset task */
    }
#endif /* CONFIG_TASK_WATCHDOG_RESET_ENABLED */

    /* Heartbeat task */
#if CONFIG_TASK_HEARTBEAT_ENABLED == 1
    xTaskCreate(vTaskHeartbeat, TASK_HEARTBEAT_NAME, TASK_HEARTBEAT_STACK_SIZE, NULL, TASK_HEARTBEAT_PRIORITY, &xTaskHeartbeatHandle);

    if (xTaskHeartbeatHandle == NULL)
    {
        /* Error creating the heartbeat task */
    }
#endif /* CONFIG_TASK_HEARTBEAT_ENABLED */

#if CONFIG_TASK_SYSTEM_RESET_ENABLED == 1
    xTaskCreate(vTaskSystemReset, TASK_SYSTEM_RESET_NAME, TASK_SYSTEM_RESET_STACK_SIZE, NULL, TASK_SYSTEM_RESET_PRIORITY, &xTaskSystemResetHandle);

    if (xTaskSystemResetHandle == NULL)
    {
        /* Error creating the system reset task */
    }
#endif /* CONFIG_TASK_SYSTEM_RESET_ENABLED */

    /* Read sensors task */
#if CONFIG_TASK_READ_SENSORS_ENABLED == 1
    xTaskCreate(vTaskReadSensors, TASK_READ_SENSORS_NAME, TASK_READ_SENSORS_STACK_SIZE, NULL, TASK_READ_SENSORS_PRIORITY, &xTaskReadSensorsHandle);

    if (xTaskReadSensorsHandle == NULL)
    {
        /* Error creating the read sensors task */
    }
#endif /* CONFIG_TASK_READ_SENSORS_ENABLED */

#if CONFIG_TASK_PARAM_SERVER_ENABLED == 1
    xTaskCreate(vTaskParamServer, TASK_PARAM_SERVER_NAME, TASK_PARAM_SERVER_STACK_SIZE, NULL, TASK_PARAM_SERVER_PRIORITY, &xTaskParamServerHandle);

    if (xTaskParamServerHandle == NULL)
    {
        /* Error creating the parameter server task */
    }
#endif /* CONFIG_TASK_PARAM_SERVER_ENABLED */

#if CONFIG_TASK_MPPT_ALGORITHM_ENABLED == 1
    xTaskCreate(vTaskMPPTAlgorithm, TASK_MPPT_ALGORITHM_NAME, TASK_MPPT_ALGORITHM_STACK_SIZE, NULL, TASK_MPPT_ALGORITHM_PRIORITY, &xTaskMPPTAlgorithmHandle);

    if (xTaskMPPTAlgorithmHandle == NULL)
    {
        /* Error creating the MPPT algorithm task */
    }
#endif /* CONFIG_TASK_MPPT_ALGORITHM_ENABLED */

#if CONFIG_TASK_HEATER_CONTROLLER_ENABLED == 1
    xTaskCreate(vTaskHeaterController, TASK_HEATER_CONTROLLER_NAME, TASK_HEATER_CONTROLLER_STACK_SIZE, NULL, TASK_HEATER_CONTROLLER_PRIORITY, &xTaskHeaterControllerHandle);

    if (xTaskHeaterControllerHandle == NULL)
    {
        /* Error creating the heater controller task */
    }
#endif /* CONFIG_TASK_HEATER_CONTROLLER_ENABLED */

#if CONFIG_TASK_DEVICE_RESPONSE_ENABLED == 1
    xTaskCreate(vTaskDeviceResponse, TASK_DEVICE_RESPONSE_NAME, TASK_DEVICE_RESPONSE_STACK_SIZE, NULL, TASK_DEVICE_RESPONSE_PRIORITY, &xTaskDeviceResponseHandle);

    if (xTaskDeviceResponseHandle == NULL)
    {
        /* Error creating the device response task */
    }
#endif /* CONFIG_TASK_DEVICE_RESPONSE_ENABLED */

#if defined(CONFIG_TASK_TIME_CONTROL_ENABLED) && (CONFIG_TASK_TIME_CONTROL_ENABLED == 1)
    xTaskCreate(vTaskTimeControl, TASK_TIME_CONTROL_NAME, TASK_TIME_CONTROL_STACK_SIZE, NULL, TASK_TIME_CONTROL_PRIORITY, &xTaskTimeControlHandle);

    if (xTaskTimeControlHandle == NULL)
    {
        /* Error creating the time control task */
    }
#endif /* CONFIG_TASK_TIME_CONTROL_ENABLED */

    create_event_groups();
}

void create_event_groups(void)
{
    task_startup_status = xEventGroupCreate();

    if (task_startup_status == NULL)
    {
        /* Error creating the startup status event group */
    }
}

/** \} End of tasks group */
